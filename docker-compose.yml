version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: reckon-postgres
    environment:
      POSTGRES_DB: reckon_dev
      POSTGRES_USER: reckon_user
      POSTGRES_PASSWORD: reckon_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reckon_user -d reckon_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - reckon-network

  # Redis (for caching/sessions)
  redis:
    image: redis:7-alpine
    container_name: reckon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - reckon-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: reckon-backend
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://reckon_user:reckon_password@postgres:5432/reckon_dev
      - SECRET_KEY=dev-secret-key-change-in-production
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - GCP_PROJECT_ID=local-dev
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - reckon-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: reckon-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - reckon-network

  # Database migration service
  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: reckon-migrate
    environment:
      - DATABASE_URL=postgresql://reckon_user:reckon_password@postgres:5432/reckon_dev
    volumes:
      - ./backend:/app
    command: ["sh", "-c", "alembic upgrade head"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - reckon-network
    profiles:
      - migrate

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  reckon-network:
    driver: bridge 